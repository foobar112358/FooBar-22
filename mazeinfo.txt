[0, 1, 1, 0],
[0, 0, 0, 1],
[1, 1, 0, 0],
[1, 1, 1, 0] 7
walls = ((1,0),(2,0),(0,2),(0,3),(1,2),(1,3),(2,3),(3,1))

[0, 0, 0, 0, 0, 0],
[1, 1, 1, 1, 1, 0],
[0, 0, 0, 0, 0, 0],
[1, 1, 1, 1, 1, 1],
[0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0] 11

0 1 1 0 0 0 0
0 1 1 0 1 1 0 
0 1 1 0 1 1 0
0 1 1 0 1 1 0
0 1 1 0 1 1 0
0 0 0 0 1 1 0

Write a function answer(map) that generates the length of the shortest path
 from the prison door to the escape pod, where you are allowed to remove one
 wall as part of your remodeling plans. The path length is the total number of
  nodes you pass through, counting both the entrance and exit nodes. The starting
   and ending positions are always passable (0). The map will always be solvable,
   though you may or may not need to remove a wall. The height and width of the
   map can be from 2 to 20. Moves can only be made in cardinal directions; no diagonal moves are allowed.

4 directions
if ([x+1] == 0)
if ([y+1] == 0)
if ([x+1] == 1 && canbreak)
if ([y+1] == 1 && canbreak)
